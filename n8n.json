{
  "nodes": [
    {
      "parameters": {
        "path": "tourist-guide",
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.action_type }}",
              "operation": "equal",
              "value2": "get_audio_guide"
            }
          ]
        }
      },
      "id": "router-audio-guide",
      "name": "Router - Audio Guide",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 260]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.action_type }}",
              "operation": "equal",
              "value2": "get_poi_recommendations"
            }
          ]
        }
      },
      "id": "router-recommendations",
      "name": "Router - Recommendations",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 360]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.action_type }}",
              "operation": "equal",
              "value2": "create_booking"
            }
          ]
        }
      },
      "id": "router-booking",
      "name": "Router - Booking",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 460]
    },

    {
      "parameters": {
        "resource": "text",
        "operation": "generateChatCompletion",
        "model": "gpt-4o-mini",
        "messages": [
          {
            "role": "system",
            "text": "Eres un guía turístico profesional. Redacta guías atractivas, breves y correctas en español."
          },
          {
            "role": "user",
            "text": "={{ $json.poi_description || ('Genera una guía turística interesante sobre ' + $json.poi_name) }}"
          }
        ],
        "options": { "maxTokens": 500, "temperature": 0.7 },
        "simplifyOutput": true
      },
      "id": "openai-guide",
      "name": "OpenAI - Generate Guide",
      "type": "n8n-nodes-langchain.openai",
      "typeVersion": 2,
      "position": [680, 220]
    },
    {
      "parameters": {
        "language": "JavaScript",
        "jsCode": "return items.map(item => { const d = item.json || {}; const guide = d.text ?? d.choices?.[0]?.message?.content ?? d.choices?.[0]?.text ?? d.response ?? ''; return { json: { ...d, guide_text: guide } }; });"
      },
      "id": "code-normalize-guide",
      "name": "Code - Normalize Guide",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [880, 220]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ 'https://api.elevenlabs.io/v1/text-to-speech/' + ($json.voice_id || '21m00Tcm4TlvDq8ikWAM') }}",
        "jsonParameters": true,
        "options": {
          "responseFormat": "file",
          "binaryPropertyName": "audio",
          "headers": {
            "xi-api-key": "YOUR_ELEVENLABS_API_KEY",
            "Accept": "audio/mpeg"
          }
        },
        "sendBody": true,
        "bodyParametersJson": "={{ { text: $json.guide_text, model_id: 'eleven_multilingual_v2', voice_settings: { stability: 0.7, similarity_boost: 0.8 } } }}"
      },
      "id": "elevenlabs-tts",
      "name": "HTTP - ElevenLabs TTS",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1080, 220]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://YOUR_PROJECT.supabase.co/rest/v1/usage_stats",
        "jsonParameters": true,
        "options": {
          "headers": {
            "apikey": "YOUR_SUPABASE_SERVICE_OR_ANON_KEY",
            "Authorization": "Bearer YOUR_SUPABASE_SERVICE_OR_ANON_KEY",
            "Content-Type": "application/json",
            "Prefer": "return=representation"
          }
        },
        "sendBody": true,
        "bodyParametersJson": "={{ [{ user_id: $json.user_id, action_type: 'get_audio_guide', poi_id: $json.poi_id, metadata: { guide_length: ($json.guide_text || '').length, timestamp: $now } }] }}"
      },
      "id": "supabase-log-audio",
      "name": "HTTP - Log Audio Usage",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1280, 220]
    },
    {
      "parameters": {
        "responseCode": 200,
        "respondWith": "binary",
        "binaryPropertyName": "audio",
        "options": {
          "responseHeaders": {
            "Content-Type": "audio/mpeg"
          }
        }
      },
      "id": "respond-audio",
      "name": "Respond to Webhook - Audio",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2,
      "position": [1480, 220]
    },

    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://places.googleapis.com/v1/places:searchNearby",
        "jsonParameters": true,
        "options": {
          "headers": {
            "X-Goog-Api-Key": "YOUR_GOOGLE_PLACES_API_KEY",
            "Content-Type": "application/json"
          },
          "queryParameters": {}
        },
        "sendBody": true,
        "bodyParametersJson": "={{ { includedPrimaryTypes: ['tourist_attraction','point_of_interest'], languageCode: 'es', maxResultCount: 10, locationRestriction: { circle: { center: { latitude: +$json.lat, longitude: +$json.lng }, radius: 1500 } } } }}"
      },
      "id": "google-places-nearby",
      "name": "HTTP - Google Places Nearby",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [680, 360]
    },
    {
      "parameters": {
        "requestMethod": "GET",
        "url": "={{ 'https://YOUR_PROJECT.supabase.co/rest/v1/points_of_interest?city_id=eq.' + encodeURIComponent($json.city_id) }}",
        "jsonParameters": true,
        "options": {
          "headers": {
            "apikey": "YOUR_SUPABASE_SERVICE_OR_ANON_KEY",
            "Authorization": "Bearer YOUR_SUPABASE_SERVICE_OR_ANON_KEY",
            "Accept": "application/json"
          }
        }
      },
      "id": "supabase-get-poi",
      "name": "HTTP - Get POI by City",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [880, 360]
    },
    {
      "parameters": {
        "keepOnlySet": false,
        "values": {
          "string": [{ "name": "status", "value": "ok" }],
          "json": [
            {
              "name": "nearby",
              "value": "={{ $json.places || $json }}",
              "type": "json"
            }
          ]
        }
      },
      "id": "set-recommendations",
      "name": "Set - Build Recommendations Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [1080, 360]
    },
    {
      "parameters": {
        "responseCode": 200,
        "respondWith": "firstIncomingItem",
        "options": {
          "responseHeaders": {
            "Content-Type": "application/json"
          }
        }
      },
      "id": "respond-json-reco",
      "name": "Respond to Webhook - JSON",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2,
      "position": [1280, 360]
    },

    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://api.stripe.com/v1/payment_intents",
        "sendBody": true,
        "jsonParameters": false,
        "body": "={{ 'amount=' + encodeURIComponent(Math.round(($json.total_price || 0) * 100)) + '&currency=' + encodeURIComponent('eur') + '&automatic_payment_methods[enabled]=true' + '&description=' + encodeURIComponent('Booking for ' + ($json.poi_name || 'POI')) }}"
      },
      "id": "stripe-paymentintent",
      "name": "HTTP - Stripe Create PaymentIntent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [680, 460]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://YOUR_PROJECT.supabase.co/rest/v1/bookings",
        "jsonParameters": true,
        "options": {
          "headers": {
            "apikey": "YOUR_SUPABASE_SERVICE_OR_ANON_KEY",
            "Authorization": "Bearer YOUR_SUPABASE_SERVICE_OR_ANON_KEY",
            "Content-Type": "application/json",
            "Prefer": "return=representation"
          }
        },
        "sendBody": true,
        "bodyParametersJson": "={{ [{ user_id: $json.user_id, poi_id: $json.poi_id, booking_date: $json.booking_date, number_of_people: $json.number_of_people, total_price: $json.total_price, status: 'pending', payment_intent_id: $json.id }] }}"
      },
      "id": "supabase-create-booking",
      "name": "HTTP - Create Booking (pending)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [880, 460]
    },
    {
      "parameters": {
        "keepOnlySet": false,
        "values": {
          "string": [{ "name": "status", "value": "ok" }],
          "json": [
            {
              "name": "payment_intent_client_secret",
              "value": "={{ $json.client_secret }}",
              "type": "string"
            },
            {
              "name": "payment_intent_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            { "name": "booking_status", "value": "pending", "type": "string" }
          ]
        }
      },
      "id": "set-booking-response",
      "name": "Set - Build Booking Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [1080, 460]
    },
    {
      "parameters": {
        "responseCode": 200,
        "respondWith": "firstIncomingItem",
        "options": {
          "responseHeaders": {
            "Content-Type": "application/json"
          }
        }
      },
      "id": "respond-json-booking",
      "name": "Respond to Webhook - JSON (Booking)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2,
      "position": [1280, 460]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          { "node": "Router - Audio Guide", "type": "main", "index": 0 },
          { "node": "Router - Recommendations", "type": "main", "index": 0 },
          { "node": "Router - Booking", "type": "main", "index": 0 }
        ]
      ]
    },
    "Router - Audio Guide": {
      "main": [
        [{ "node": "OpenAI - Generate Guide", "type": "main", "index": 0 }]
      ]
    },
    "OpenAI - Generate Guide": {
      "main": [
        [{ "node": "Code - Normalize Guide", "type": "main", "index": 0 }]
      ]
    },
    "Code - Normalize Guide": {
      "main": [
        [{ "node": "HTTP - ElevenLabs TTS", "type": "main", "index": 0 }]
      ]
    },
    "HTTP - ElevenLabs TTS": {
      "main": [
        [{ "node": "HTTP - Log Audio Usage", "type": "main", "index": 0 }]
      ]
    },
    "HTTP - Log Audio Usage": {
      "main": [
        [{ "node": "Respond to Webhook - Audio", "type": "main", "index": 0 }]
      ]
    },

    "Router - Recommendations": {
      "main": [
        [{ "node": "HTTP - Google Places Nearby", "type": "main", "index": 0 }]
      ]
    },
    "HTTP - Google Places Nearby": {
      "main": [
        [{ "node": "HTTP - Get POI by City", "type": "main", "index": 0 }]
      ]
    },
    "HTTP - Get POI by City": {
      "main": [
        [
          {
            "node": "Set - Build Recommendations Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set - Build Recommendations Payload": {
      "main": [
        [{ "node": "Respond to Webhook - JSON", "type": "main", "index": 0 }]
      ]
    },

    "Router - Booking": {
      "main": [
        [
          {
            "node": "HTTP - Stripe Create PaymentIntent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Stripe Create PaymentIntent": {
      "main": [
        [
          {
            "node": "HTTP - Create Booking (pending)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP - Create Booking (pending)": {
      "main": [
        [{ "node": "Set - Build Booking Payload", "type": "main", "index": 0 }]
      ]
    },
    "Set - Build Booking Payload": {
      "main": [
        [
          {
            "node": "Respond to Webhook - JSON (Booking)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
